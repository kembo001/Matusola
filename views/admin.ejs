<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/styles.css" />
    <title>Admin - Add Vehicle</title>
  </head>
  <body>
    <div class="banner">
      <a href="/" class="banner__title">Wholesale Cars</a>
      <a href="https://maps.app.goo.gl/oiKn7Hk6RhoiGgvX9" target="_blank" class="banner__address">üìç 7820 Riverdale drive NW, Ramsey, MN 55303 </a>
      <a href="tel:763-242-6155" class="banner__phone">üìû (763) 242-6155 </a>
    </div>

    <div class="admin">
      <h1 class="admin__title">Add New Vehicle</h1>

      <form class="admin__form" action="/add-vehicle" method="POST" enctype="multipart/form-data" id="vehicleForm">
        <div class="admin__group">
          <label for="title">Vehicle Title*</label>
          <input type="text" id="title" name="title" required placeholder="2017 Ford Escape SE 4x4" />
        </div>

        <div class="admin__row">
          <div class="admin__group">
            <label for="year">Year*</label>
            <select id="year" name="year" required>
              <option value="">Select Year</option>
              <% for(let y = new Date().getFullYear(); y >= 1990; y--) { %>
              <option value="<%= y %>"><%= y %></option>
              <% } %>
            </select>
          </div>

          <div class="admin__group">
            <label for="make">Make*</label>
            <input type="text" id="make" name="make" required placeholder="Ford, Toyota, Kia" />
          </div>

          <div class="admin__group">
            <label for="model">Model*</label>
            <input type="text" id="model" name="model" required placeholder="Escape, Camry, Forte" />
          </div>
        </div>

        <div class="admin__row">
          <div class="admin__group">
            <label for="price">Price*</label>
            <input type="number" id="price" name="price" required min="0" step="1" placeholder="7999,600,11877" />
          </div>

          <div class="admin__group">
            <label for="mileage">Mileage*</label>
            <input type="number" id="mileage" name="mileage" required min="0" step="1" placeholder="102004,75333" />
          </div>
        </div>

        <div class="admin__row">
          <div class="admin__group">
            <label for="trim">Trim</label>
            <input type="text" id="trim" name="trim" placeholder="SE,EX-L,LX,Premium" />
          </div>

          <div class="admin__group">
            <label for="vin">VIN</label>
            <input
              type="text"
              id="vin"
              name="vin"
              placeholder="1FMCU9G95HUC49078"
              pattern="[A-HJ-NPR-Z0-9]{17}"
              oninput="this.value = this.value.toUpperCase()"
              title="Please enter a valid 17-character VIN"
            />
          </div>
        </div>

        <div class="admin__row">
          <div class="admin__group">
            <label for="engine">Engine</label>
            <input type="text" id="engine" name="engine" placeholder="2.0L I4 F DOHC 16V" />
          </div>

          <div class="admin__group">
            <label for="transmission">Transmission</label>
            <select id="transmission" name="transmission">
              <option value="Automatic">Automatic</option>
              <option value="Manual">Manual</option>
            </select>
          </div>
        </div>

        <div class="admin__group">
          <label for="status">Status*</label>
          <select id="status" name="status" required>
            <option value="available">Available</option>
            <option value="sold">Sold</option>
          </select>
        </div>

        <div class="admin__group">
          <label for="images">Vehicle Images*</label>
          <input type="file" id="images" name="images" multiple accept="image/*" required style="margin-bottom: 1rem" />
          <div id="imagePreview" class="admin__preview">
            <!-- Images will be displayed here -->
          </div>
        </div>

        <button type="submit" class="admin__submit">Add Vehicle</button>
      </form>
    </div>

    <div id="loadingOverlay" class="loading-overlay" style="display: none">
      <div class="loading-content">
        <div class="loading-spinner"></div>
        <div class="loading-text">Uploading vehicle and images...</div>
      </div>
    </div>

    <div class="admin__vehicles">
      <h2 class="admin__subtitle">Manage Vehicles</h2>

      <div class="admin__vehicle-list">
        <% vehicles.forEach(vehicle => { %>
        <div class="admin__vehicle-item">
          <img src="https://wholesalecars.sfo3.cdn.digitaloceanspaces.com/<%= vehicle.images_folder %>/1.jpg" alt="<%= vehicle.title %>" class="admin__vehicle-thumb" />
          <div class="admin__vehicle-info">
            <h3><%= vehicle.title %></h3>
            <p>$<%= vehicle.price %> - <%= vehicle.status %></p>
          </div>
          <div class="admin__actions">
            <form action="/toggle-status/<%= vehicle.id %>" method="POST" class="admin__status-form">
              <button type="submit" class="admin__status-btn <%= vehicle.status === 'available' ? 'available' : 'sold' %>">
                <%= vehicle.status === 'available' ? 'Mark Sold' : 'Mark Available' %>
              </button>
            </form>

            <form action="/delete-vehicle/<%= vehicle.id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this vehicle?');">
              <button type="submit" class="admin__delete-btn">Delete</button>
            </form>
          </div>
        </div>
        <% }); %>
      </div>
    </div>

    <script>
      // Auto-capitalize VIN
      document.getElementById("vin").addEventListener("input", function (e) {
        this.value = this.value.toUpperCase();
      });

      // Add this JavaScript to handle preview and ordering
      document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("vehicleForm");
        const imageInput = document.getElementById("images");
        const previewContainer = document.getElementById("imagePreview");
        let files = []; // Store FileList as array for reordering

        imageInput.addEventListener("change", function (e) {
          files = Array.from(e.target.files);
          updatePreview();
        });

        function updatePreview() {
          previewContainer.innerHTML = "";

          files.forEach((file, index) => {
            const reader = new FileReader();
            const preview = document.createElement("div");
            preview.className = "admin__preview-item";
            preview.draggable = true;

            reader.onload = function (e) {
              preview.innerHTML = `
                <img src="${e.target.result}" alt="Preview">
                <div class="admin__preview-info">
                  <span>Image ${index + 1}</span>
                  <button type="button" onclick="removeImage(${index})" class="admin__preview-remove">√ó</button>
                </div>
              `;
            };

            // Drag and drop handlers
            preview.addEventListener("dragstart", handleDragStart);
            preview.addEventListener("dragover", handleDragOver);
            preview.addEventListener("drop", handleDrop);
            preview.addEventListener("dragend", handleDragEnd);

            reader.readAsDataURL(file);
            previewContainer.appendChild(preview);
          });
        }

        // Drag and drop functionality
        let draggedItem = null;

        function handleDragStart(e) {
          draggedItem = this;
          this.classList.add("dragging");
        }

        function handleDragOver(e) {
          e.preventDefault();
        }

        function handleDrop(e) {
          e.preventDefault();
          if (this === draggedItem) return;

          // Get positions
          const allItems = [...previewContainer.querySelectorAll(".admin__preview-item")];
          const draggedIdx = allItems.indexOf(draggedItem);
          const droppedIdx = allItems.indexOf(this);

          // Reorder files array
          const tempFile = files[draggedIdx];
          files.splice(draggedIdx, 1);
          files.splice(droppedIdx, 0, tempFile);

          updatePreview();
        }

        function handleDragEnd(e) {
          this.classList.remove("dragging");
        }

        // Modify form submission
        form.addEventListener("submit", function (e) {
          e.preventDefault();

          // Show loading overlay
          loadingOverlay.style.display = "flex";

          // Create a new FormData object
          const formData = new FormData(form);

          // Remove the original files
          formData.delete("images");

          // Add only the files we want to keep
          files.forEach((file, index) => {
            formData.append("images", file);
          });

          // Submit the form with our modified files
          fetch("/add-vehicle", {
            method: "POST",
            body: formData,
          })
            .then((response) => {
              if (response.ok) {
                window.location.href = "/admin?success=true";
              } else {
                throw new Error("Upload failed");
              }
            })
            .catch((error) => {
              console.error("Error:", error);
              loadingOverlay.style.display = "none"; // Hide on error
              window.location.href = "/admin?error=true";
            });
        });

        // Update removeImage function
        window.removeImage = function (index) {
          files.splice(index, 1);
          updatePreview();

          // If no files left, clear the input
          if (files.length === 0) {
            imageInput.value = "";
          }
        };
      });
    </script>
  </body>
</html>
